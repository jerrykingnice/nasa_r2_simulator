<?xml version="1.0"?>
<launch>
  <arg name="world"        default="$(find r2_gazebo)/worlds/empty.world" />
  <arg name="use_sim_time" default="true" />
  <arg name="gui"          default="true" />
  <arg name="headless"     default="false"/>
  <arg name="debug"        default="false" />
  <arg name="paused"       default="false" />
  <arg name="octomap"      default="false" />

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world)"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <param name="robot_description" command="$(find xacro)/xacro.py '$(find r2_gazebo)/xacro/r2c_full_ros_control.urdf.xacro'" />
  <node name="spawn_r2" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model r2 -paused=true -z 2" respawn="false" output="screen" />

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find r2_gazebo)/config/controllers/r2_fullbody_generic_traj_control.yaml" command="load"/>

  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" ns="/r2" args="r_arm_controller l_arm_controller r_hand_controller l_hand_controller l_leg_controller r_leg_controller l_foot_controller r_foot_controller neck_controller waist_controller joint_state_controller"/>

  <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen"/>

  <!-- reference frame broadcaster for moveit -->
  <node pkg="tf" type="static_transform_publisher" name="moveit_odom_broadcaster" args="0 0 0 0 0 0 reference_frame world 100" />

  <node pkg="tf" type="static_transform_publisher" name="octomap_odom_broadcaster" args="0 0 0 0 0 0 /world /map 100" if="$(arg octomap)"/>
  <node pkg="octomap_server" type="octomap_server_node" name="octomap_server" args="cloud_in:=/r2/asus/depth/points _resolution:=0.02" if="$(arg octomap)"/>

</launch>

